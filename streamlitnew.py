# -*- coding: utf-8 -*-
"""streamlitnew

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QUvaTEsieXetpNXQnmZOu_2v-n3z9A_9
"""

import pickle
import streamlit as st



# loading the saved models

ensemble_model = pickle.load(open('Ensemble (3).sav', 'rb'))


# Diabetes Prediction Page
if (selected == 'Diabetes Prediction'):

    # page title
    st.title('Diabetes Prediction using ML')


    # getting the input data from the user
    col1, col2, col3 = st.columns(3)

    with col1:
        temp = st.text_input('temp')

    with col2:
        temp_min = st.text_input('temp_min')

    with col3:
        temp_max = st.text_input('temp_max')

    with col1:
        pressure = st.text_input('pressure')

    with col2:
        humidity = st.text_input('humidity')

    with col3:
        wind_speed = st.text_input('wind_speed')

    with col1:
        wind_deg = st.text_input('wind_deg')

    with col2:
        rain_1h = st.text_input('rain_1h')

    with col3:
        rain_3h = st.text_input('rain_3h')

    with col1:
        rain_6h = st.text_input('rain_6h')

    with col2:
        rain_12h = st.text_input('rain_12h')

    with col3:
        rain_24h = st.text_input('rain_24h')

    with col1:
        clouds_all = st.text_input('clouds_all')

    with col2:
        weather_main = st.text_input('weather_main')

    with col3:
        weather_description = st.text_input('weather_description')



    # code for Prediction
    weather_diagnosis = ''

    # creating a button for Prediction

    if st.button('Diabetes Test Result'):
        weather_prediction = ensemble.predict([[temp,temp_min,temp_max,pressure,humidity,wind_speed,wind_deg,rain_1h,rain_3h,rain_6h,rain_12h,rain_24h,clouds_all,weather_main,weather_description]])

        if (weather_prediction[0] == 1):
          weather_diagnosis = 'The person is diabetic'
        else:
          weather_diagnosis = 'The person is not diabetic'

    st.success(diab_diagnosis)
